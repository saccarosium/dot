#!/usr/bin/env bash

plugin_list="$DOTFILES"/etc/packages/neovim
bundle_dir="$XDG_DATA_HOME"/nvim/site/pack/bundle/opt
tmp="/tmp/packtmp"

[[ -f $plugin_list ]] || touch "$plugin_list"
[[ -d $bundle_dir ]] || mkdir -p "$bundle_dir"
cd "$bundle_dir" || exit 1

git_basename() { basename "$1" | sed "s/\..*//g"; }

install() {
    local url="$1"
    local name="$2"
    [[ -z $name ]] && name="$(git_basename "$url")"
    git clone --depth 50 "$url" "$name" &&
    jq <"$plugin_list" ". + [{\"name\": \"$name\", \"url\": \"$url\"}]" >"$tmp" && cat "$tmp" >"$plugin_list"
}

update() {
    find . -mindepth 1 -maxdepth 1 -type d -print -exec git -C {} pull \;
}

rebuild() {
    local plugs
    plugs="$(find . -maxdepth 1 -type d)"
    echo "[]" >"$plugin_list"
    for i in $plugs; do
        [[ $i == '.' ]] && continue
        url="$([[ -d $i ]] && git -C "$i" remote get-url origin)"
        name="$([[ -d $i ]] && echo "$i" | sed "s|\./||g")"
        jq <"$plugin_list" ". + [{\"name\": \"$name\", \"url\": \"$url\"}]" >"$tmp" && cat "$tmp" >"$plugin_list"
    done
}

list() {
    jq '.[] | .name' <"$plugin_list"
}

delete() {
    for i in "$@"; do
        [[ $i == '-d' ]] && continue
        [[ -d $i ]] && rm -rf "$i" && jq <"$plugin_list" ". - map(select(.name == \"$i\"))" >"$tmp" && cat "$tmp" >"$plugin_list"
    done
}

while getopts "i:d:url" arg; do
    case $arg in
    i)
        install "$2" "$3"
        ;;
    u)
        update
        ;;
    r)
        rebuild
        ;;
    l)
        list "$2"
        ;;
    d)
        delete "$@"
        ;;
    *)
        exit 0
        ;;
    esac
done
